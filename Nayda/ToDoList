ToDo List.

Initialialized on April 17.04.2018


Started 17.04.2018

    1) Rework the Create Lobby Page.

        1.1 Add the Settings Button (OK)
        1.2 Add the Setting Widget (OK)
        1.3 Rework "Start with Default Settings" button (OK)

Continued 19.06.2018

   2) Pass the size of the "Before The Game" to all the other non-Modal dialogs.

Continued 08.07.2018

   1) To Do server to accept many connections.
   http://qt-doc.ru/realizacia-servera-s-pomoschu-klassa-qtcpserver.html

Continued 16.07.2018

    0) Rebuild starting menu
        0.1. Remove Create_Lobby and Find_Lobby buttons (Ok)
        0.2. Replace them with Play! Button (Ok)
        0.3. Rework the Play! Menu
            0.3.1 Make it the same size as Before The Game (Ok)

    1) To create satisfactory connection mode with server:
        1.1. During setting saving to report user that they are successfuly save
        1.2. Show them in the label

    2) To make independent button "Connect to server"

    3) Server should reply client directly after conenction whether there are some free room slots
        or possibility to connect to some room

    4) According to 3), there should be another window of the "Connected Mode"
        4.1 "Connected" state info label with basic server info and status
        4.2 Create room (if it is possible)
        4.3 Observe free rooms (if it is possible)

    5) If there is place for new room, there should appear room-creation dialog with settings.
        5.1 Procedure:
            5.1.1 User push the button to create room and reserve it on server
            5.1.2 Server will reject connections to this room, but allowing
            clients to see it in "connection to existing room" mode, replying:: room is creating.
            5.1.3 User select settings. By 16.07.2018 - only default button will exist
            5.1.4 After selecting settings (selection boxes), user will start the game pressing the button
            5.1.5 Before sening settings and command to server, user will see the message "Are you sure?"

    6) Client should be able to report user whether it was disconnected
        6.1 To make special Icon "Connected" somewhere in all the "connected phase windows"
        6.2 To make spceial procedure of exception if connection was closed.
        6.3 If anyone of the clients (or all of them) will be diconnected, server should save the Game
        on its own. Mark the Game with data and nicknames. Master will be the one who can restart (or anyone).

    7) Add protobuf.

8) Make this before building protobuf on Windows
export PATH=/c/Qt/Tools/mingw530_32/bin/:$PATH
//Home Working Machine
export PATH=/d/Qt/Tools/mingw530_32/bin/:$PATH

/d/Munchkin/Nayda/Libs/protoc.exe --cpp_out=. serverMessageSystem.proto
/d/Munchkin/Viluy/Libs/protoc.exe --cpp_out=. serverMessageSystem.proto

//Home Working Machine
/d/Munchkin/Nayda/Nayda/Libs/protoc.exe --cpp_out=. serverMessageSystem.proto
/d/Munchkin/Viluy/Libs/protoc.exe --cpp_out=. serverMessageSystem.proto

Continued 17.11.2018
Now protobuf is added, messages are coming there and back again, roomcreationlobby and the other issues are imlemented.

Now to:

ProcessConnectionToRoomReply. Now to:
1) Show The User expected Window
2) Disconnect Buttons Connect To Room and Create Room while Sending ConnectionToRoomRequest + adding there timeout (if server do not reply)??? - not sure if necessary.
3) Adding QueryPostitonWindow (It should be close able, but if the user closes it, he disconnect's from the server)
4) Adding EnterRoomRepy from server side. It may be the same message, but with special parameters. After it the user should see RoomCreationWaitingLobby as not the master but as the Opponent.
5) Emit Client is Entering the room on server side when the server sconnect the player to room.
6) On the RoomSelections Window send the signal to connect to the existing Room. Check it on the Servers side.
7) When all the Opponents have entered, set the GameBegins message
and finally switch to THE GAME!!!!!

//Добавить сообщени в список енумерейшена коннекшн сабсситем
//Переработать составитель ClientConnectionToRoomReply в сервере с учётом нового списка собщений
//Из него создать требуемый зал
//На стороне сервера отправлять сообщения об изменениях / удалениях комнат
        //В данном контексте с учётом залоченных параметров достаточно просто отправлять их тем, кто стосит в очереди, т.к.
        //Эти клиенты находятся в стадии ожидания.
//Обработать их на стороне клиента соответствующим образом
//Добавить сообщение от клиента о выбранной комнате на стороне клинета
//Обработать его на стороне сервера
//Т.е. добавить клиента в требуемую комнату.


//Остановился на     QObject::connect(m_serverPtr, &Server::SignalProcessClientConnectionToRoomReply, m_beforeTheGamePtr, &Before_The_Game::SlotProcessClientConnectionToRoomReply);
В Ситемном менеджере.
Добавить заполенние//изменение поля имени комнаты.
 ответе сервера передавать игроку информацию о числе игроков в очереди (чтобы он адекватно понимал свою позицию)
Переделать протобф на сервере
Обработать сигналы оот сервера в ответ на запрос о подсоединении к комнате если запрос ответил о возможнности подключения (передал комнаты)
т.е. соединить сигналы
На сервере обрабоать новый запрос на создание комнаты,
добавить в комнату параметр имени
Правильно сформировать новый ответ на зпапрос о подключении к комнате.

Продолжен 26.11.2018
1) Сделать дебажную настройку "2"
Чтобы начать игру могли только два игрока
Ок
2) Сервер послыает всем сообщение, что сейчас начнётся игра.
Ок. В т.ч. теперь шлёт наборы векторов рандомных чисел для формирования колоды

3) Запустить игровой таймер старта, для начала подвязать его на дебажную кнопку
"Начать игру"

3) Отработать ситуацию, когда игрок уходит до начала игры.
4) Отработать ситуацию ухода игроков в процессе игры.
(Если игрок остаётся один - игра закрывается)
5) Начать разрабатывать собственно игровой процесс после перехода в режим "Игра"



Исправить баг с взаимным передпокдлючением - когда просиходит переназнаячение мастера,
вновь подключившийся клиент (который раньше был мастером)
не именуется в новом окне.


Проверить, сообщается ли о подключении нового клиента мастеру.


//27.11.2018
Перед продолжением рефакторинга, направленного на взаимодействие с сервером, для начал провести оптимизацию игрового интерфейса,
т.к. в настоящий момент отображение на Линухе - не очень.
Собственно потратил кучу времени н аоптимизацию под Линух, получается, что координаты возвращаются верные. Однако, QWidget::show
не отображает желаемого результата.


Проблему можно (и нужно) обойти созданием дополнительного виджета просмотра карты.
Его нужно встроить в игровой клиент.


//28.11.2018
Сегодня впервые два клиента соединились через сервер и открыли окно игры

//29.11.2018
0. Проработать интерфейс поля боя.
    А) Должно содержать интерфейс таймеров (таймеров всегда два - таймер хода / таймер фазы)
    Б) Должно содержать интерфейс карт
        Б) Интерфейс карт - три части, две строки и столбец. Снизу интерфейс карт игрока ("За Себя"). Сверху интерфейс карт "против игрока".
        Интерфейс "За себя" : слева карта "Игрока" (Аватарка "по умолчанию")
                              правее все его карты, которые он сыграл за себя (усилители).
        Интерфейс "Против игрока" : слева карта монстра (монстров + бродячие твари), правее усилители монстра.
        Интерфейс "Карты специальных функций" - Активная - одна, сверху ютятся все, которые уже произвели эффект.
        Возмонжо, те из них, которые "продолжают действие", можно как-то подсвечивать.




1. Реализовать запуск таймера в игровом поле:
(Игра начнётся через....)

2. Передать управление игроку.
Найти место для отображения игровых таймеров.
Рисунок часов, а "тикают" цифры.


Завтра начать с него
3. _slotSendTheCardToTheGameCheck

Проверка карты (написать грамотно).
Клиент сообщает о том, кто ходит первый.

Первым ходит мастер.
Завтра продолжить отсюда.
connect(animation, &QPropertyAnimation::finished, [this, card] {SlotAddPlayedCardToTheBattleField(card.GetCard());});

1.12.2018
//Предыдущее сделать позднее.
//Сначала сделать процедуру определения того, кто должен ходить первым.
//Пусть дебаговая кнопка передаст настоящие имена
    Сдлеать функцию, которая определяет, кто должен ходить первым. Клиент определяет, что это не он, и ждёт своей очереди.
    Запускается процесс ожидания игрока 2 или своего собственного.
    Последовательность фаз выглядит следующим образом:
    Если персонаж не вор, первой наступает фаза торговли.
    Чтобы она включилась, клиент проверяет, что у него достаточно карт на руках и / или в игре с достаточной стоимотсью
    стобы насобирать хотябы уровень.
    Далее он предлагает ему согласиться/отказаться от продажи карт.
    Если игрок НЕ ВОР и он отка


//В самом начале игра должна проверить, кто сейчас ходит.
//Если ходит не главный игрок - для начальной проверки клиенту
//не нужно получать от сервера дополнительных сообщений -
//требуется сличить имя игрока из настроек с именем мастера.
//Для всех последующих итераций сервер также стартует таймеры,
//но только для того, чтобы по таймауту отключить игрока.
//клиент же при молчании игрока делает ход сам (самый простой  - открывает дверь)
//больше он не делает ничего.
//сервер (по идее - сам поймёт, что клиент отключился).
//т.к. произойти это может в любой момент времени,
//клиент, получив подобное сообщение, должен сам произвести все действия, которые
//за этим следуют.
//По сути для клиента есть два состояния - "свой ход" и "не свой ход"
//1. Сначала полностью отладить "свой ход" без противодействия /действия других игроков
//2. Добавить воздействие других игроков "не свой ход"
//3. Обеспечить корректные действия сервера по таймаутам -
//   Сервер передаёт сообщения, по которым сменяются фазы.
//   Клиенты в этот момент находятся в фазе "ожидание ответа сервера"
//   Т.е. у главного клиента должен сработать "таймаут", он должен передать сообщение на сервер
//   Не позднее, чем общее время хода игрока (или какое-нибудь другое время).
//   Если клиент ничего не прислал, сервер должен выкинуть его по таймауту,
//   Т.к. во всех остальных случаях клиент пришлёт репорт
//   Если какой-нибудь клиент три раза подряд пришлёт "автоматический" ход
//   Этот клиент будет автоматически отключен от сервера.


//02.12
Сделать окно продажи

//03.12
Отлаживал баг с динамически мзоданием игроков

//04.12
Отладил.
Отработать корректное нажатие кнопки Ок в окне продажи
Добавить настройку (встроенную) для окна продажи.
    Обозначать её как NAY-002_EMBEDDED_SETTING
    Такие можно будет потом добавлять в игру как настоящие настройки
Эта настройка должна запрещать "перепродажу" карт - чтобы игрок не мог "скинуть лишние"
при продаже

//07.12
1) Добавлять сброшенные карты в сброс в конце анимации ---> Ok
2) Добавлять уровень в зависимости от объёма проданных карт ---> Ok
3) Пофиксить баг с четвёртой картой на продажу ---> Ok
4) Сделать всплывающее модальное сообщение (однократного использования)
с нотификацией ушедших в сброс карт
5) блокировать кнопку "торговля" во время продажи --->Ok
6) Исправить баг с неправильно попадающей в сброс картой. ---> Ok.






